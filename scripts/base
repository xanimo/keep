#!/bin/bash
export LC_ALL=C

use_sudo="sudo"
for i in "$@"
do
case $i in
    -d|--docker)    use_sudo="";;
    -h=*|--host=*)  host="${i#*=}";;
    -p|--packages)  packages=1;;
    -s|--sdk)       setup_sdk=1;;
    *)              error=1;;
esac
done

if [ "$error" ]; then
    echo "Please provide a host to build and try again."
    exit $error
fi

if [ "$packages" ]; then
$use_sudo ln -snf /usr/share/zoneinfo/'America/Los_Angeles' /etc/localtime && echo 'America/Los_Angeles' > /etc/timezone

if [[ "$host" == *"i686-"* ]]; then
    $use_sudo dpkg --add-architecture i386
fi

$use_sudo apt-get clean \
&& $use_sudo apt-get update \
&& $use_sudo apt-get install --no-install-recommends -y \
autoconf \
autotools-dev \
automake \
bison \
binutils-gold \
build-essential \
bsdmainutils \
curl \
ca-certificates \
ccache \
faketime \
git \
libtool \
libtool-bin \
libbsd-dev \
libboost-dev \
libunwind-dev \
python \
python3 \
pkg-config \
procps \
rsync \
tzdata \
$(source $host; echo $packages;) \
&& rm -rf /var/lib/apt/lists/* /tmp/* \
&& $use_sudo apt-get autoclean \
&& $use_sudo apt-get autoremove
if [[ "$host" == *"-w64-mingw32"* ]]; then
    $use_sudo update-alternatives --set $host-g++  /usr/bin/$host-g++-posix
    $use_sudo update-alternatives --set $host-gcc  /usr/bin/$host-gcc-posix
    $use_sudo update-binfmts --import /usr/share/binfmts/wine
fi
fi

if [ "$setup_sdk" ]; then
    sdk_version=$(source $host; echo $sdk)
    sdk_shasum=$(source $host; echo $sdk_shasum)
    sdk_filename=$(source $host; echo $sdk_filename)
    sdk_url=$(source $host; echo $sdk_url)/$sdk_filename
    mkdir -p ./depends/sdk-sources
    mkdir -p ./depends/SDKs
    curl -L --fail $sdk_url -o ./depends/sdk-sources/$sdk_filename && \
    echo "$sdk_shasum  depends/sdk-sources/$sdk_filename" | sha256sum -c
    tar -C depends/SDKs -xf depends/sdk-sources/$sdk_filename
fi
